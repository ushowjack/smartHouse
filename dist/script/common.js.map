{"version":3,"sources":["common.js"],"names":["GetDate","now","Date","getFullYear","time","getMonth","getDate","getHours","getMinutes","getSeconds","Timestamp","url","getTimestamp","indexOf","encodeURI","Array","prototype","myForEach","callBack","context","forEach","i","this","length","call","CookieUtil","get","cookieName","cookieStart","cookieValue","document","cookie","cookieEnd","decodeURIComponent","substring","set","_ref","name","expires","path","domain","secure","value","encodeURIComponent","cookieText","toGMTString","unset","_ref2","FormUtil","placeholderOff","ev","target","val","getAttribute","setAttribute","setPlaceholder","el","onfocus","onblur","placeholderOn","css","arguments","undefined","line-height","font-size","position","display","top","left","z-index","$","elemName","placeholderPolyfill","index","element","placeholder","find","attr","txt","append","focus","text","blur"],"mappings":"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","file":"common.js","sourcesContent":["/**\r\n * User: Ushow Jack/youshoujie@tomee.cn\r\n * Date: 2017/4/11\r\n * Time: 16:04\r\n */\r\n\"use strict\"\r\n/**\r\n * 处理forEach兼容性问题\r\n * @param callBack\r\n * @param context\r\n */\r\nArray.prototype.myForEach = function myForEach(callBack, context) {\r\n    typeof context === \"undefined\" ? context = window : null;\r\n\r\n    if (Array.prototype.forEach === \"Function\") {\r\n        this.forEach(callBack, context);\r\n        return;\r\n    }\r\n\r\n    //->不兼容处理\r\n    for (var i = 0; i < this.length; i++) {\r\n        typeof callBack === \"function\" ? callBack.call(context, this[i], i, this) : null;\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * 获取当前时间方法\r\n *\r\n * @returns {string}\r\n * @constructor\r\n */\r\nfunction GetDate() {\r\n    let now =  new Date();\r\n    let year = now.getFullYear();\r\n    let month = now.getMonth() + 1;\r\n    let day = now.getDate();\r\n    let hours = now.getHours();\r\n    let min = now.getMinutes();\r\n    let sec = now.getSeconds();\r\n    let time = `${year}-${month}-${day} ${hours}:${min}:${sec}`;\r\n    return time;\r\n}\r\n/**\r\n * 增加时间戳，解决浏览器缓存\r\n * @param url [string]\r\n * @returns {url}\r\n */\r\nfunction Timestamp(url) {\r\n\r\n    let getTimestamp = GetDate();\r\n\r\n    if (url.indexOf(\"?\") > -1) {\r\n        url = `${url}&timestamp=${getTimestamp}`;\r\n    } else {\r\n        url = `${url}?timestamp=${getTimestamp}`;\r\n    }\r\n    return encodeURI(url);\r\n}\r\n\r\n\r\n/**\r\n *  * 来源：JavaScript高级程序设计，由Ushow改写\r\n * @type {{get: CookieUtil.get, set: CookieUtil.set, unset: CookieUtil.unset}}\r\n * @version 1.0\r\n */\r\nlet CookieUtil = {\r\n    /**\r\n     * 获取cookie值\r\n     * @param name {string}\r\n     * @returns {strung} 返回对应的值\r\n     */\r\n    get: function (name) {\r\n        let cookieName = encodeURIComponent(name) + \"=\",\r\n            cookieStart = document.cookie.indexOf(cookieName),\r\n            cookieValue = null;\r\n\r\n        if (cookieStart > -1) {\r\n            let cookieEnd = document.cookie.indexOf(\";\", cookieStart);\r\n            if (cookieEnd === -1) {\r\n                cookieEnd = document.cookie.length;\r\n            }\r\n            cookieValue = decodeURIComponent(document.cookie.substring(cookieStart + cookieName.length, cookieEnd));\r\n        }\r\n\r\n        return cookieValue;\r\n    },\r\n    /**\r\n     * 写入cookie方法\r\n     * @param name{string}          键名\r\n     * @param value{string/num}     键值\r\n     * @param expires{int}          有效天数（默认浏览器关闭后清除）\r\n     * @param path{string}          路径\r\n     * @param domain{string}        域名（默认当前域名）\r\n     * @param secure{boolean}       安全\r\n     */\r\n    set: function ({name, value, expires, path, domain, secure}) {\r\n        let cookieText = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n        if (expires) {\r\n            let now = Date.now();\r\n            expires = new Date(now + expires * 86400000);\r\n        }\r\n        if (expires instanceof Date) {\r\n            cookieText += \"; expires=\" + expires.toGMTString();\r\n        }\r\n        if (path) {\r\n            cookieText += \"; path=\" + path;\r\n        }\r\n        if (domain) {\r\n            cookieText += \"; domain=\" + domain;\r\n        }\r\n        if (secure) {\r\n            cookieText += \"; secure\";\r\n        }\r\n        document.cookie = cookieText;\r\n    },\r\n    /**\r\n     * 覆盖cookie函数\r\n     * @param name{string}          键名\r\n     * @param path{string}          路径\r\n     * @param domain{string}        域名（默认当前域名）\r\n     * @param secure{boolean}       安全\r\n     */\r\n    unset: function ({name, path, domain, secure}) {\r\n        this.set({name: name, value: \"\", path: path, domain: domain, secure: secure});\r\n    }\r\n}\r\n\r\n/**\r\n * 表单方法集合\r\n * @type {{placeholderOff: FormUtil.placeholderOff, placeholderOn: FormUtil.placeholderOn, setPlaceholder: FormUtil.setPlaceholder, placeholderPolyfill: FormUtil.placeholderPolyfill}}\r\n */\r\nlet FormUtil = {\r\n    /**\r\n     * 用于绑定input的placeholder事件\r\n     * @example inputElem.forEach(FormUtil.setPlaceholder)\r\n     * @param el {DOM对象}\r\n     * @version 1.0\r\n     */\r\n    placeholderOff: function (ev) {\r\n        ev.target.val = ev.target.getAttribute(\"placeholder\");\r\n        ev.target.setAttribute(\"placeholder\", \"\");\r\n    },\r\n    placeholderOn: function (ev) {\r\n        ev.target.setAttribute(\"placeholder\", ev.target.val);\r\n    },\r\n    setPlaceholder: function (el) {\r\n        el.onfocus = FormUtil.placeholderOff;\r\n        el.onblur = FormUtil.placeholderOn;\r\n    },\r\n    /**\r\n     * 解决IE9不能使用placeholder的问题，输入想使用placeholder的选择器\r\n     * 设置对应input的标签的placeholder的值即可\r\n     * @depend  jQuery\r\n     * @example placeholderFn(\".input-item\");\r\n     * @param elemName\r\n     * @param css\r\n     */\r\n    placeholderPolyfill: function (elemName, css = {\r\n        \"color\": \"rgb(204, 204, 204)\",\r\n        \"line-height\": \"40px\",\r\n        \"font-size\": \"14px\",\r\n        \"position\": \"absolute\",\r\n        \"display\": \"inline\",\r\n        \"top\": 0,\r\n        \"left\": 50,\r\n        \"z-index\": 2\r\n    }) {\r\n        let inputItem = $(elemName);\r\n        inputItem.each(function (index, element) {\r\n            let placeholder = $(element).find(\"input\").attr(\"placeholder\");\r\n            let txt = $(`<txt>${placeholder}</txt>`);\r\n            txt.css(css);\r\n            $(element).append(txt);\r\n            $(element).find(\"input\").focus(function () {\r\n                txt.text(\"\");\r\n            });\r\n            $(element).find(\"input\").blur(function () {\r\n\r\n                if (!this.value) {\r\n                    txt.text(placeholder);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]}